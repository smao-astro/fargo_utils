- model: fargo
  sourcecode:
    - include:
        - fargo_utils
        - fargo_data_process
        - jaxdisk2D
        - '**.py'
    - exclude:
        dir:
          - fargo3d
          - tmp
          - tests
          - job
          - runs
          - __pycache__
    - exclude: '*.ipynb'
    - exclude: '*.cfg'
    - exclude: '*.out'
    - exclude: '*.csv'

  operations:
    get_fargo:
      exec: bash -c "git clone --depth 1 https://bitbucket.org/fargo3d/public.git fargo3d && rm -rf fargo3d/.git"

    setup:
      main: fargo_utils.fargo_setups
      flags-dest: args
      flags-import: all
      requires:
        - operation: get_fargo
          target-type: copy

    run:
      main: fargo_utils.fargo_run
      flags-dest: args
      flags-import: all
      requires:
        - operation: setup
          target-type: copy
          target-path: fargo3d
          select:
            - fargo3d/fargo3d
            - fargo3d/planets
            - fargo3d/std/func_arch.cfg
            - fargo3d/arg_groups.yml

    # post-processing
    # target-type of to_npz should be copy so that pinn:train can find the files needed.
    to_npz:
      main: fargo_data_process.fargo_outputs2npz
      requires:
        - operation: run
          target-type: copy
      flags-dest: args
      flags-import: all
    to_xarray:
      main: fargo_data_process.fargo_outputs2xarray
      requires:
        - operation: run
          target-type: link
      flags-dest: args
      flags-import: all
    gap_density_evolution:
      main: fargo_data_process.fargo_outputs2gap_evolution
      requires:
        - operation: run
          target-type: link
      flags-dest: args
      flags-import: all
    collect_xarrays:
      main: fargo_data_process.fargo_collect_xarrays
      flags-dest: args
      flags-import: all
      requires:
        file: 'fargo_runs.yml'
    uniform_mask_disks:
      main: fargo_data_process.uniform_mask_disks
      flags-dest: args
      flags-import: all
    random_mask_disks:
      main: fargo_data_process.random_mask_disks
      flags-dest: args
      flags-import: all
    uniform_mask_disks_radial:
        main: fargo_data_process.uniform_mask_disks_radial
        flags-dest: args
        flags-import: all
    add_noise_disks:
      main: fargo_data_process.add_noise_disks
      flags-dest: args
      flags-import: all
    add_beam_noise_disks:
      main: fargo_data_process.add_beam_noise_disks
      flags-dest: args
      flags-import: all
    rotate_disks:
      main: fargo_data_process.rotate_disks
      flags-dest: args
      flags-import: all
    to_mat:
      main: fargo_data_process.fargo_outputs2mat
      requires:
        - operation: run
          target-type: link
      flags-dest: args
      flags-import: all
    to_variance:
      main: fargo_data_process.fargo_outputs2variance
      requires:
        - operation: run
          target-type: link
      flags-dest: args
      flags-import: all
    to_radial_plot:
      main: fargo_data_process.fargo_outputs2radial_plot
      requires:
        - operation: run
          target-type: link
      flags-dest: args
      flags-import: all
    to_radial_movie:
      main: fargo_data_process.fargo_outputs2radial_movie
      requires:
        - operation: run
          target-type: link
      flags-dest: args
      flags-import: all
    to_movie:
      main: fargo_data_process.fargo_outputs2movie
      requires:
        - operation: run
          target-type: link
      flags-dest: args
      flags-import: all
    to_movie2:
      main: fargo_data_process.fargo_outputs2movie2
      requires:
        - operation: run
          target-type: link
      flags-dest: args
      flags-import: all
    to_frames:
      main: fargo_data_process.fargo_outputs2frames
      requires:
        - operation: run
          target-type: link
      flags-dest: args
      flags-import: all
    to_grid_npz:
      main: fargo_data_process.fargo_outputs2grid_npz
      requires:
        - operation: run
          target-type: copy
      flags-dest: args
      flags-import: all
