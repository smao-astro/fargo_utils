- model: fargo
  sourcecode:
    - exclude:
        dir: fargo3d
    - exclude:
        dir: tmp
    - exclude:
        dir: tests
    - exclude: '*.ipynb'

  operations:
    get_fargo:
      exec: bash -c "git clone --depth 1 https://bitbucket.org/fargo3d/public.git fargo3d && rm -rf fargo3d/.git"

    setups:
      main: fargo_utils.fargo_setups
      flags-dest: args
      flags-import: all
      requires:
        - operation: get_fargo
          target-type: copy

    make:
      exec: bash -c "
            cd fargo3d &&
            make SETUP=${SETUP} \
              BIGMEM=${BIGMEM} \
              RESCALE=${RESCALE} \
              PROFILING=${PROFILING} \
              PARALLEL=${PARALLEL} \
              MPICUDA=${MPICUDA} \
              GPU=${GPU} \
              DEBUG=${DEBUG} \
              FULLDEBUG=${FULLDEBUG} \
              FARGO_DISPLAY=${FARGO_DISPLAY} \
              UNITS=${UNITS} \
              GHOSTSX=${GHOSTSX} \
              LONGSUMMARY=${LONGSUMMARY}"

      requires:
        - operation: setups
          target-type: copy
      flags:
        # from std/defaultflags
        SETUP:
          required: yes
        BIGMEM:
          choices: [0, 1]
          default: 1
        RESCALE:
          choices: [0, 1]
          default: 0
        PROFILING:
          choices: [0, 1]
          default: 0
        PARALLEL:
          choices: [0, 1]
          default: 0
        MPICUDA:
          choices: [0, 1]
          default: 0
        GPU:
          choices: [0, 1]
          default: 0
        DEBUG:
          choices: [0, 1]
          default: 0
        FULLDEBUG:
          choices: [0, 1]
          default: 0
        FARGO_DISPLAY:
          choices: ['NONE', 'MATPLOTLIB']
          default: 'NONE'
        UNITS:
          choices: ['0', 'MKS', 'CGS']
          default: '0'
        GHOSTSX:
          choices: [0, 1]
          default: 0
        LONGSUMMARY:
          choices: [0, 1]
          default: 0

    run:
      exec: bash -c "cd fargo3d && ./fargo3d setups/${SETUP}/${JOBNAME}.par"
      requires:
        - operation: make
          target-type: copy
      flags:
        SETUP:
        JOBNAME:

    # post-processing
    to_npz:
      main: fargo_data_process.fargo_outputs2npz
      requires:
        - operation: run
      flags-dest: args
      flags-import: all
    to_mat:
      main: fargo_data_process.fargo_outputs2mat
      requires:
        - operation: run
      flags-dest: args
      flags-import: all
    to_movie:
      main: fargo_data_process.fargo_outputs2movie
      requires:
        - operation: run
      flags-dest: args
      flags-import: all
    to_grid_npz:
      main: fargo_data_process.fargo_outputs2grid_npz
      requires:
        - operation: run
      flags-dest: args
      flags-import: all
